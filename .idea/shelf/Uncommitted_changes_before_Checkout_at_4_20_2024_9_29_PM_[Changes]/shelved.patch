Index: src/main/java/com/example/hospitaldeliveryinterface/controllers/LoginFormController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.hospitaldeliveryinterface.controllers;\r\n\r\nimport com.example.hospitaldeliveryinterface.firebase.DataBaseMgmt;\r\nimport com.example.hospitaldeliveryinterface.model.Employee;\r\nimport javafx.event.ActionEvent;\r\nimport javafx.fxml.FXML;\r\nimport javafx.scene.control.*;\r\nimport javafx.scene.layout.BorderPane;\r\nimport javafx.scene.layout.HBox;\r\nimport javafx.scene.layout.VBox;\r\n\r\nimport java.security.MessageDigest;\r\nimport java.security.NoSuchAlgorithmException;\r\nimport java.util.Base64;\r\nimport java.util.Map;\r\nimport java.util.Optional;\r\nimport java.util.concurrent.ExecutionException;\r\n\r\npublic class LoginFormController {\r\n\r\n    @FXML\r\n    private BorderPane LogInVbox;\r\n\r\n    @FXML\r\n    private Button LoginButton;\r\n\r\n    @FXML\r\n    private Label labelLoginError;\r\n\r\n    @FXML\r\n    private HBox loginErrorHbox;\r\n\r\n    @FXML\r\n    private VBox loginPanel;\r\n\r\n    @FXML\r\n    private PasswordField textFieldPassword;\r\n\r\n    @FXML\r\n    private TextField textFieldUsername;\r\n\r\n    private HomepageController controller;\r\n    public void initialize(){\r\n        LogInVbox.setVisible(false);\r\n        LogInVbox.getStylesheets().clear();\r\n    }\r\n\r\n    public void setHomepageController(HomepageController control){\r\n        controller = control;\r\n    }\r\n    public void setLoginVBoxVisibility(boolean currentStatus){\r\n        LogInVbox.setVisible(currentStatus);\r\n    }\r\n    @FXML\r\n    public void loginUser() throws ExecutionException, InterruptedException {\r\n        loginErrorHbox.setVisible(false);\r\n        if(textFieldUsername.getText().isEmpty() || textFieldPassword.getText().isEmpty()) {\r\n            labelLoginError.setText(\"Username or Password is empty\");\r\n            labelLoginError.setStyle(\"-fx-text-fill: red;\");\r\n            loginErrorHbox.setVisible(true);\r\n            errorBorder(textFieldUsername);\r\n            errorBorder(textFieldPassword);\r\n            return;\r\n        }\r\n        // Retrieve user data based on the provided username\r\n        Map<String, Object> userData = DataBaseMgmt.retrieveUserData(textFieldUsername.getText(),\"employees\");\r\n        if (userData != null) {\r\n            // Check if the provided username and password match the stored username and password\r\n            String storedUsername = (String) userData.get(\"Username\");\r\n            String storedPasswordHash = (String) userData.get(\"Password\");\r\n\r\n            // Hash the password provided by the user\r\n            String providedPasswordHash = hashPassword(textFieldPassword.getText());\r\n\r\n            if (storedPasswordHash.equals(providedPasswordHash)) {\r\n\r\n                // Password matches\r\n                DataBaseMgmt.updateLoginStatus(textFieldUsername.getText(),\"True\");\r\n                LogInVbox.setVisible(false);\r\n                controller.setLoginButtonText(\"Sign out\");\r\n                Employee.setCurrentLogin(textFieldUsername.getText());\r\n                controller.setCurrentSignIn(textFieldUsername.getText());\r\n                System.out.println(\"Logged in\");\r\n                //changes text and style and changes it back to default border\r\n                showDialogCorrect();\r\n                defaultBorder(textFieldUsername);\r\n                defaultBorder(textFieldPassword);\r\n\r\n            } else {\r\n                // Password does not match\r\n                labelLoginError.setText(\"Password is incorrect\");\r\n                labelLoginError.setStyle(\"-fx-text-fill: red;\");\r\n                loginErrorHbox.setVisible(true);\r\n                errorBorder(textFieldPassword);\r\n            }\r\n        } else {\r\n            // User does not exist in the database\r\n            labelLoginError.setText(\"User does not exist\");\r\n            labelLoginError.setStyle(\"-fx-text-fill: red;\");\r\n            loginErrorHbox.setVisible(true);\r\n            errorBorder(textFieldUsername);\r\n        }\r\n        textFieldUsername.clear();\r\n        textFieldPassword.clear();\r\n    }\r\n    private String hashPassword(String password) {\r\n        try {\r\n            MessageDigest digest = MessageDigest.getInstance(\"SHA-256\");\r\n            byte[] hash = digest.digest(password.getBytes());\r\n            return Base64.getEncoder().encodeToString(hash);\r\n        } catch (NoSuchAlgorithmException e) {\r\n            e.printStackTrace(); // Handle the exception appropriately\r\n            return null; // Or throw an exception\r\n        }\r\n    }\r\n\r\n\r\n    @FXML\r\n    void onReturnToHome(ActionEvent event) {\r\n        LogInVbox.setVisible(false);\r\n        loginErrorHbox.setVisible(false);\r\n        defaultBorder(textFieldUsername);\r\n        defaultBorder(textFieldPassword);\r\n        textFieldUsername.clear();\r\n        textFieldPassword.clear();\r\n    }\r\n\r\n    public  void errorBorder(TextField textField){\r\n        textField.setStyle(\"-fx-border-color: red;\");\r\n    }\r\n\r\n    public  void defaultBorder(TextField textfield){\r\n        textfield.setStyle(\"-fx-border-color: grey;\");\r\n    }\r\n\r\n    public static boolean textFieldCheck(String username,String password) {\r\n        boolean checker = false;\r\n        if (username.length() == 0 || password.length() == 0) {\r\n            checker = true;\r\n        }\r\n        if (!(username.matches(\"S\\\\d{8}\") && password.matches(\"^(?=.*[a-z])(?=.*[A-Z])(?=.*\\\\d)(?=.*[@$!%*?&])[A-Za-z\\\\d@$!%*?&]{8,}$\"))) {\r\n\r\n            checker = true;\r\n        }\r\n        return checker;\r\n\r\n    }\r\n\r\n    public void showDialog () {\r\n        Alert alert = new Alert(Alert.AlertType.WARNING);\r\n        alert.setHeaderText(\"Invalid input\");\r\n        alert.setTitle(\"Warning\");\r\n        alert.setContentText(\"Username or password is incorrect\");\r\n        Optional<ButtonType> result = alert.showAndWait();\r\n    }\r\n\r\n\r\n    public void showDialogCorrect () {\r\n        Alert alert = new Alert(Alert.AlertType.CONFIRMATION);\r\n        alert.setHeaderText(\"Correct Input\");\r\n        alert.setTitle(\"Logged in\");\r\n        alert.setContentText(\"You are signed in\");\r\n        Optional<ButtonType> result = alert.showAndWait();\r\n    }\r\n\r\n    /*@FXML\r\n    void handleLoginButton() {\r\n\r\n            if (textFieldCheck(textFieldUsername.getText(), textFieldPassword.getText()) == false) {\r\n                showDialogCorrect();\r\n                LogInVbox.setVisible(false);\r\n                usernameLabel.setText(String.valueOf(textFieldUsername.getText()));\r\n\r\n                LoginButtonChange.setText(\"Sign out\");\r\n            } else{\r\n                showDialog();\r\n            }\r\n            textFieldUsername.clear();\r\n            textFieldPassword.clear();\r\n\r\n    }*/\r\n\r\n}\r\n
===================================================================
diff --git a/src/main/java/com/example/hospitaldeliveryinterface/controllers/LoginFormController.java b/src/main/java/com/example/hospitaldeliveryinterface/controllers/LoginFormController.java
--- a/src/main/java/com/example/hospitaldeliveryinterface/controllers/LoginFormController.java	
+++ b/src/main/java/com/example/hospitaldeliveryinterface/controllers/LoginFormController.java	
@@ -17,6 +17,15 @@
 import java.util.concurrent.ExecutionException;
 
 public class LoginFormController {
+    @FXML
+    private Button deliverReturnBtn;
+
+    @FXML
+    private Button editBtn;
+
+    @FXML
+    private Button newDeliveryButton;
+
 
     @FXML
     private BorderPane LogInVbox;
@@ -86,6 +95,7 @@
                 defaultBorder(textFieldUsername);
                 defaultBorder(textFieldPassword);
 
+
             } else {
                 // Password does not match
                 labelLoginError.setText("Password is incorrect");
